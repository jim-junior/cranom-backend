"""
Django settings for backend project.

Generated by 'django-admin startproject' using Django 4.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

import os
from datetime import timedelta
from pathlib import Path
from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv(
    "DJANGO_SECRET_KEY", 'django-insecure-55pd&v_pb@na(x%ar@pm&k2%dvlo3qn+^0@lo$-v6qd3y99c=6')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]
CORS_ALLOW_ALL_ORIGINS = True


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    "rest_framework",
    'rest_framework_simplejwt',
    "corsheaders",
    "deployments",
    "users",
    "anymail",
    "channels",
    "billing",
    "intergrations",
    'rest_framework.authtoken',
    "communications",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ANYMAIL = {
    # (exact settings here depend on your ESP...)
    "MAILGUN_API_KEY": os.getenv("MAILGUN_API_KEY"),
    "MAILGUN_SENDER_DOMAIN": os.getenv("MAILGUN_SENDER_DOMAIN"),
}

# or sendgrid.EmailBackend, or...
EMAIL_BACKEND = "anymail.backends.mailgun.EmailBackend"
# if you don't already have this in settings
DEFAULT_FROM_EMAIL = os.getenv("DEFAULT_FROM_EMAIL")
# ditto (default from-email for Django errors)
SERVER_EMAIL = os.getenv("SERVER_EMAIL")

ROOT_URLCONF = 'backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'backend.wsgi.application'
ASGI_APPLICATION = "backend.asgi.application"

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [
                os.getenv(
                    "CHANNELS_REDIS_URL"
                )
            ],
        },
    },
}

# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv("DB_NAME"),
        'USER': os.getenv("DB_USER"),
        'PASSWORD': os.getenv("DB_PASSWORD"),
        'HOST': os.getenv("DB_HOST"),
        'PORT': os.getenv("DB_PORT"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
        'OPTIONS': {
            'min_length': 6,
        }
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = "Africa/Nairobi"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=10),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=365),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': False,
    'UPDATE_LAST_LOGIN': False,

    'ALGORITHM': 'HS256',
    'SIGNING_KEY': SECRET_KEY,
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'JWK_URL': None,
    'LEEWAY': 0,

    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'user_id',
    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=5),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=1),
}


REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    )
}


PASSWORD_HASHERS = [
    'django.contrib.auth.hashers.Argon2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.ScryptPasswordHasher',
]

MEDIA_URL = '/useruploads/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'useruploads')


FLUTTERWAVE_PUBLIC_KEY = os.getenv("FLUTTERWAVE_PUBLIC_KEY")
FLUTTERWAVE_SECRET = os.getenv("FLUTTERWAVE_SECRET")
FLUTTERWAVE_ENDPOINT = "https://api.flutterwave.com/v3"
FLUTTERWAVE_HASH = os.getenv("FLUTTERWAVE_HASH")
FLUTTERWAVE_ENCRYPTION_KEY = os.getenv("FLUTTERWAVE_ENCRYPTION_KEY")

GITHUB_WEBHOOK_SECRET = os.getenv("GITHUB_WEBHOOK_SECRET")

GITHUB_SECRET_HASH = os.getenv("GITHUB_SECRET_HASH")

GH_PRIVATE_KEY = """-----BEGIN RSA PRIVATE KEY-----
MIIEpAIBAAKCAQEAtfKCteQHjhNGllKu5uj2uW8cncvO1IgBKnZPcNOk1yJv/BPF
5T6cVKfKF5SfZVUsLcVlksGON0lYnxRsgpkR4G8pmXjNpuyJRAta2XMxH48rTfB8
qG3Kdie4/7rUTbbU4honS93yKZ1x7ev6lLjOLkPm1YrJb32YPxOzFOMgm9Iv5O4R
NbTelLylcvpK7ot4p72We9y/4Adwsi9KB1SlbATJ68jCaYmy5adt0w+3NVtFbgOg
VGdUyWbnciDUwcJXo6SvI5DviGgIvQOe/nrcTtEqq0TxgKvDlEQXZqRGdAhqY66J
Ydf+Oot/2MCO2xnaHg47lUrfK6hi9+665/lKTwIDAQABAoIBAFtSc2TUJS6cYiuF
KKBhgaSlLlnNN+zYrq0fYNQihnQspsSBMCzV9iVPalHXmQGFdH0svMSiPb1mJQMD
f0s1hRF++gQ77AzCYEs0386Q0LEkbPnboNXw9VPEsEg6/+BZyhQKSHr91VQp4Eso
zEblUydJkYzQ8jXxdf8C5jmvnmhWh8a9gkwgrfqI4BUNyxnlRES3NjnXM4iTEwgI
8nQ0ghNvEuJV2B9z5lXMmCEateuY7TTxx+4yYPkiW8MF3rl3TlJLqkTSy26EWHz1
4zoeyAzbNorgZM11s0k+YL2uU5z3MHRc022tTBipFrlcCpFZ8aP9nE+bg8kkdKEw
FPqNKuECgYEA6Pj+JTZdwO6PhDmXEIzy5rHelCrQG52bwuDNcAW7DxMsy1PsLavE
BVvA0kgRn0YTTdh/8WIxss52SZ9mHwM3IEak+S2AVKexDYUAMgTpxElvb3U1ie/u
JOX5c89FaEGdZ1ncoJMRwi6PanxhCQ/bceBZYsOEuQz6V7eF821liJkCgYEAx+5m
7MdMVA4xCCY2Wj7aCTCKS9KWRgegVsTaOohHFv5SzRHLGQjzoLscTtMdawzZKwsd
8Vjj8A8OJvT5vDWCDM+u2G8nSAuhLqrBuUZxZuB7hwVBktJz7bqXNEDZ5n+pXtBf
5XURFtC4DY8oAJeUPcOmflhl+gDK+zjmvyWDMycCgYEAuV+eQZffw6tO8OQuKpIs
mJnBRF5IlyCylr7vWIqGzDjytJsDW1fIModOh0OnGffVVmTFcRkz+FXF01ENHfIe
BAWSMV8eNL316I8Cl8pHA9N24tX9ktMhx6Rh999eF9XV3C2pmu9K+xq3LQDo6R//
+b2NAkQWsHP+Ipu57vcGCkkCgYEAjkYTzlmA8qvqrn7q3MuvQyzcrVpdf9Y7fqO1
HEQQOseeyrnnypf5Lx8X5OwNGjnZbO0LUM1N324HRye7c/ir5EwCg5iN3pIQEHKJ
SzxaxLfoj8vovv+uabUHlrKznXipYYRtSY9GKvM6lsOR1uIHJvDM0Uo8v2zDBYWX
hty+Aa8CgYAsc6mS+zsUvi/oRxrYiCg671uyu4j0rPzEXpiro1JWeoct7NjtjUtj
KcbrNHwG5KpJB3/bjzw2afwmunGn0SL65TlMvgc13EAJgBLmVrypx8f2IwuqIKa8
rYvkW7uMaswwdC0wYurz0HusVEdNpcmKfF67xyfCzkQy8brE+0ZYKw==
-----END RSA PRIVATE KEY-----"""

# Kpack settings
KPACK_URL = "https://kpack.io"
KPACK_DOCKER_REGISTRY = "jimjuniorb/"


# PLatform settings
APP_DEPLOYMENTS_DOMAIN = "cranomapp.ml"

# Kube settings
KUBE_CLUSTER_TOKEN = os.getenv("KUBE_CLUSTER_TOKEN")
KUBE_CLUSTER_HOST = os.getenv("KUBE_CLUSTER_HOST")
